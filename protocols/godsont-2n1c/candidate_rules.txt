rule_1: replace = NON -> repRule != LCFR
rule_2: repRule = LCFR -> replace != NON
rule_3: repRule = NLNCW -> replace != NON
rule_4: repRule = NLNCR -> replace != NON
rule_5: replace = NON -> repRule != NLNCW
rule_6: replace = NON -> repRule != NLNCR
rule_7: replace = NON -> repRule != LNCFR
rule_8: repRule = LNCFR -> replace != NON
rule_9: replace = TOREP -> repRule != LCFR
rule_10: repRule = LNCNFR -> replace != NON
rule_11: repRule = LCFR -> replace != TOREP
rule_12: replace = NON -> repRule != LNCNFR
rule_13: repRule = LCFR -> replace != RANDOM
rule_14: replace = TOREP -> repRule != LNCFR
rule_15: repRule = LNCFR -> replace != TOREP
rule_16: repRule = LCFR -> replace != REQUIRE
rule_17: replace = TOREP -> repRule != LNCNFR
rule_18: repRule = LNCNFR -> replace != TOREP
rule_19: replace = REQUIRE -> repRule != LCFR
rule_20: replace = RANDINV -> repRule != LCFR
rule_21: repRule = LCFR -> replace != RANDINV
rule_22: repRule = LNCNFR -> replace != RANDINV
rule_23: replace = RANDINV -> repRule != LNCNFR
rule_24: repRule = NLNCW -> replace != REQREPALL
rule_25: replace = REQREPALL -> repRule != NLNCW
rule_26: replace = REQREPALL -> repRule != NLNCR
rule_27: repRule = NLNCR -> replace != REQREPALL
rule_28: replace = REQREPALL -> repRule != LNCNFR
rule_29: repRule = LNCNFR -> replace != REQREPALL
rule_30: repRule = LNCNFR -> curData = TYPE_DATA_2
rule_31: repRule = LNCNFR -> curData = TYPE_DATA_1
rule_32: repRule = LNCNFR -> curNode = TYPE_NODE_2
rule_33: repRule = LNCNFR -> curLock = TYPE_LOCK_2
rule_34: repRule = LNCNFR -> curData != TYPE_DATA_1
rule_35: repRule = LNCNFR -> curNode != TYPE_NODE_1
rule_36: repRule = LNCNFR -> curLock != TYPE_LOCK_2
rule_37: repRule = LNCNFR -> curData != TYPE_DATA_2
rule_38: repRule = LNCNFR -> curNode != TYPE_NODE_2
rule_39: repRule = LNCNFR -> curLock != TYPE_LOCK_1
rule_40: repRule = LNCNFR -> curCache = TYPE_CACHE_2
rule_41: repRule = LNCNFR -> curMemory = TYPE_ADDR_2
rule_42: repRule = LNCNFR -> curMemory != TYPE_ADDR_2
rule_43: repRule = LNCNFR -> curMemory != TYPE_ADDR_1
rule_44: repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = true
rule_45: repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = true
rule_46: repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = true
rule_47: lock[TYPE_LOCK_1].beUsed = false -> repRule != LNCNFR
rule_48: node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_49: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_50: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_51: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_52: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_53: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_54: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_55: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_56: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_57: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_58: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_59: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_60: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_61: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_62: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_63: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_64: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_65: lock[TYPE_LOCK_1].beUsed = true & replace = NON -> repRule != LCFR
rule_66: lock[TYPE_LOCK_1].beUsed = true & replace = NON -> repRule != NLNCW
rule_67: lock[TYPE_LOCK_1].beUsed = true & replace = NON -> repRule != NLNCR
rule_68: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> repRule != LCFR
rule_69: lock[TYPE_LOCK_1].beUsed = true & replace = NON -> repRule != LNCFR
rule_70: node[TYPE_NODE_1].hasLock = true & replace = NON -> repRule != LCFR
rule_71: repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_72: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].beUsed = true
rule_73: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_74: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> repRule != NLNCW
rule_75: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].beUsed = true
rule_76: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> repRule != NLNCR
rule_77: node[TYPE_NODE_1].hasLock = true & replace = NON -> repRule != NLNCR
rule_78: lock[TYPE_LOCK_1].beUsed = true & replace = NON -> repRule != LNCNFR
rule_79: node[TYPE_NODE_1].hasLock = true & replace = NON -> repRule != LNCFR
rule_80: node[TYPE_NODE_1].hasLock = false & replace = NON -> repRule != LCFR
rule_81: repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_82: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> repRule != LNCFR
rule_83: node[TYPE_NODE_1].hasLock = true & replace = NON -> repRule != NLNCW
rule_84: node[TYPE_NODE_1].hasLock = false & replace = NON -> repRule != NLNCW
rule_85: node[TYPE_NODE_1].hasLock = false & replace = NON -> repRule != LNCFR
rule_86: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].hasLock = true
rule_87: node[TYPE_NODE_1].hasLock = true & replace = NON -> repRule != LNCNFR
rule_88: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> repRule != LNCNFR
rule_89: node[TYPE_NODE_1].hasLock = false & replace = NON -> repRule != NLNCR
rule_90: repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_91: repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_92: repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_93: repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_94: node[TYPE_NODE_1].hasLock = false & replace = NON -> repRule != LNCNFR
rule_95: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_96: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_97: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_98: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_99: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_100: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_101: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LCFR
rule_102: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_103: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != NLNCW
rule_104: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != NLNCR
rule_105: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCFR
rule_106: curLock = TYPE_LOCK_1 & repRule = LCFR -> lock[TYPE_LOCK_1].beUsed = true
rule_107: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_108: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_109: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_110: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_111: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_112: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_113: curLock = TYPE_LOCK_1 & repRule = LNCFR -> lock[TYPE_LOCK_1].beUsed = true
rule_114: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_115: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_116: replace = DONE & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_117: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_118: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_119: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_120: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_121: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_122: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_123: replace = DONE & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_124: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_125: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_126: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_127: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_128: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_129: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_130: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_131: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_132: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_133: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_134: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_135: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_136: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_137: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_138: replace = DONE & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_139: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_140: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_141: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_142: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_143: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].hasLock = true
rule_144: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_145: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_146: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_147: replace != TOREP & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_148: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_149: replace != TOREP & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_150: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_151: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_152: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_153: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_154: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_155: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_156: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_157: replace != TOREP & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_158: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_159: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_160: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_161: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_162: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_163: replace != TOREP & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_164: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_165: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_166: replace != TOREP & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_167: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_168: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_169: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_170: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].hasLock = true
rule_171: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_172: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != TOREP -> repRule != LNCNFR
rule_173: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].hasLock = true
rule_174: replace != TOREP & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_175: replace != TOREP & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_176: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_177: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_178: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_179: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_180: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_181: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_182: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_183: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_184: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_185: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_186: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_187: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_188: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_189: replace != REQREPALL & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_190: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_191: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_192: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_193: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_194: replace != REQREPALL & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_195: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_196: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LCFR
rule_197: curData = TYPE_DATA_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_198: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_199: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_200: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_201: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_202: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_203: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_204: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_205: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_206: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_207: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_208: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_209: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_210: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_211: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_212: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_213: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_214: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_215: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_216: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_217: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_218: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_219: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_220: curData = TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_221: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_222: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != NLNCR
rule_223: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_224: curData != TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_225: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_226: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_227: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_228: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != NLNCW
rule_229: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_230: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_231: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_232: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_233: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_234: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_235: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_236: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_237: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_238: curData != TYPE_DATA_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_239: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_240: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_241: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_242: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_243: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_244: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_245: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_246: curLock != TYPE_LOCK_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_247: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_248: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_249: curData != TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_250: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LCFR
rule_251: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_252: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_253: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_254: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_255: curLock != TYPE_LOCK_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_256: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_257: curData = TYPE_DATA_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_258: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_259: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_260: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_261: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_262: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_263: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_264: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_265: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_266: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_267: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCFR
rule_268: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_269: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_270: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_271: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_272: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_273: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_274: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_275: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_276: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_277: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_278: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCFR
rule_279: curData != TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_280: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_281: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_282: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_283: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_284: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != NLNCR
rule_285: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_286: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_287: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_288: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_289: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_290: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_291: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_292: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_293: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_294: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_295: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_296: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_297: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_298: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_299: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_300: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_301: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_302: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_303: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != NLNCW
rule_304: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_305: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_306: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_307: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_308: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_309: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_310: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_311: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_312: curLock != TYPE_LOCK_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_313: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_314: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_315: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_316: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_317: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_318: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_319: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_320: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_321: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_322: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_323: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_324: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_325: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_326: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_327: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_328: replace = NON & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_329: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_330: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_331: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_332: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_333: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_334: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_335: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_336: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_337: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_338: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_339: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_340: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LCFR
rule_341: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_342: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_343: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCFR
rule_344: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_345: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_346: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & replace = NON -> repRule != LCFR
rule_347: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_348: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCR
rule_349: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCW
rule_350: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_351: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_352: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_353: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_354: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_355: replace = DONE & repRule = LCFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_356: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_357: lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_358: replace = DONE & repRule = LCFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_359: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_360: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCW
rule_361: lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_362: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_363: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCFR
rule_364: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCR
rule_365: repRule = LNCNFR & replace = DONE -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_366: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_367: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCNFR
rule_368: replace = DONE & repRule = LNCFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_369: replace = DONE & repRule = LNCFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_370: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = NON -> repRule != LCFR
rule_371: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_372: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_373: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_374: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_375: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_376: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_377: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = NON -> repRule != LNCFR
rule_378: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_379: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_380: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = NON -> repRule != NLNCW
rule_381: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = NON -> repRule != NLNCR
rule_382: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_383: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = NON -> repRule != LCFR
rule_384: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = NON -> repRule != NLNCW
rule_385: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = NON -> repRule != LNCNFR
rule_386: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = NON -> repRule != NLNCR
rule_387: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = NON -> repRule != LNCFR
rule_388: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_389: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_390: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = NON -> repRule != LNCNFR
rule_391: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = NON -> repRule != LCFR
rule_392: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_393: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_394: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_395: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_396: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_397: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_398: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LCFR
rule_399: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = NON -> repRule != LCFR
rule_400: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_401: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].beUsed = false
rule_402: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_403: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = NON -> repRule != NLNCR
rule_404: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = NON -> repRule != NLNCW
rule_405: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_406: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_407: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_408: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_409: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = NON -> repRule != LNCFR
rule_410: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = false
rule_411: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_412: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].beUsed = false
rule_413: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = TOREP -> repRule != LCFR
rule_414: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_415: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LCFR
rule_416: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_417: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].beUsed = false
rule_418: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_419: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & replace = REQREPALL -> repRule != NLNCW
rule_420: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_421: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_422: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_423: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & replace = REQUIRE -> repRule != LCFR
rule_424: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_425: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_426: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> node[TYPE_NODE_2].hasLock = false
rule_427: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_428: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & replace = REQREPALL -> repRule != NLNCR
rule_429: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = NON -> repRule != LNCFR
rule_430: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_431: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = NON -> repRule != LNCNFR
rule_432: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_433: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_434: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> node[TYPE_NODE_2].hasLock = false
rule_435: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_436: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_437: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_438: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_439: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_440: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_441: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_442: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_443: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = false
rule_444: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_445: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_446: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_447: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_448: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = NON -> repRule != NLNCW
rule_449: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = NON -> repRule != NLNCR
rule_450: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_451: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & replace = REQREPALL -> repRule != LNCNFR
rule_452: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_453: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_454: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_455: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_456: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_457: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LNCNFR
rule_458: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_459: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_460: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_461: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_462: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_463: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_464: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> node[TYPE_NODE_2].hasLock = false
rule_465: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_466: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_467: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_468: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_469: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_470: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_471: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_472: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = TOREP -> repRule != LNCFR
rule_473: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_474: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_475: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_476: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_477: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_478: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_479: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = false
rule_480: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_481: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_482: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_483: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_484: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_485: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_486: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_487: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_488: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_489: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_490: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_491: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_492: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCFR
rule_493: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = NON -> repRule != LNCNFR
rule_494: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_495: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_496: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_497: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_498: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_499: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_500: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_501: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_502: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_503: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_504: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_505: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_506: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_507: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_508: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_509: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_510: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_511: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_512: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = TOREP -> repRule != LNCNFR
rule_513: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_514: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_515: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_516: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_517: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_518: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_519: repRule = NLNCW & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_520: repRule = LNCNFR & curNode = TYPE_NODE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_521: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_522: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_523: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_524: repRule = NLNCW & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_525: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_526: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_527: repRule = LNCNFR & curNode = TYPE_NODE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_528: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_529: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_530: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_531: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_532: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_533: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_534: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_535: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_536: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_537: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_538: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_539: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_540: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_541: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_542: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_543: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_544: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_545: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_546: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_547: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_548: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_549: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_550: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_551: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_552: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & curNode = TYPE_NODE_1 -> replace != TOREP
rule_553: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_554: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_555: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_556: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCW
rule_557: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_558: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_559: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_560: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_561: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_562: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_563: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & curNode = TYPE_NODE_1 -> replace != RANDOM
rule_564: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_565: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_566: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_567: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_568: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_569: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_570: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_571: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_572: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_573: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_574: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_575: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCR
rule_576: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_577: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_578: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_579: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_580: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_581: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_582: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != LNCNFR
rule_583: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_584: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_585: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_586: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_587: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_588: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_589: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_590: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_591: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_592: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_593: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_594: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_595: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_596: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_597: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_598: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_599: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_600: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_601: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_602: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_603: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_604: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_605: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_606: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_607: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_608: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_609: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_610: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_611: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_612: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_613: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_614: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_615: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_616: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_617: replace != REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_618: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_619: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_620: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_621: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_622: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_623: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_624: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_625: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_626: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_627: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_628: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_629: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_630: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_631: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_632: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_633: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_634: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_635: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_636: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_637: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_638: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_639: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_640: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_641: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_642: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_643: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_644: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_645: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_646: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_647: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_648: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_649: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_650: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_651: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_652: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_653: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_654: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_655: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_656: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_657: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_658: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_659: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_660: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_661: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_662: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_663: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_664: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_665: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_666: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_667: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_668: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_669: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_670: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_671: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_672: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_673: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_674: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_675: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_676: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_677: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_678: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_679: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_680: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_681: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_682: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_683: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_684: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_685: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_686: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_687: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_688: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_689: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_690: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_691: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_692: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_693: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_694: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_695: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_696: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_697: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_698: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_699: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_700: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_701: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_702: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_703: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_704: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_705: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_706: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_707: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_708: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_709: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_710: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_711: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_712: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_713: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_714: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_715: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_716: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_717: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_718: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_719: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_720: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_721: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_722: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_723: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_724: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_725: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_726: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_727: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_728: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_729: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_730: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_731: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_732: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_733: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_734: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_735: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_736: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_737: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_738: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_739: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_740: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_741: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_742: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_743: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_744: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_745: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_746: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_747: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_748: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_749: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_750: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_751: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_752: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_753: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_754: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_755: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_756: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_757: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_758: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_759: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_760: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_761: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_762: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_763: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_764: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_765: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_766: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_767: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_768: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_769: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_770: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_771: curCache = TYPE_CACHE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_772: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_773: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_774: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_775: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_776: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_777: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_778: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_779: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_780: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_781: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_782: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_783: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_784: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_785: curCache = TYPE_CACHE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_786: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_787: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_788: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_789: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_790: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_791: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_792: curCache = TYPE_CACHE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_793: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_794: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_795: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_796: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_797: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_798: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_799: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_800: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_801: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_802: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_803: curCache = TYPE_CACHE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_804: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_805: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_806: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_807: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_808: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_809: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_810: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_811: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_812: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_813: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_814: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> replace != TOREP
rule_815: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_816: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_817: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_818: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_819: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_820: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_821: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_822: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_823: lock[TYPE_LOCK_1].beUsed = false & replace = NON -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_824: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_825: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_826: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_827: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_828: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_829: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_830: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_831: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_832: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_833: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_834: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_835: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_836: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_837: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_838: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_839: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_840: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_841: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_842: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_843: curCache = TYPE_CACHE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_844: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_845: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_846: curCache = TYPE_CACHE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_847: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_848: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_849: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_850: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_851: curCache = TYPE_CACHE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_852: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_853: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_854: curCache = TYPE_CACHE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_855: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_856: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_857: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_858: curCache = TYPE_CACHE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_859: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_860: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_861: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_862: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_863: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_864: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_865: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_866: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_867: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_868: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_869: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_870: repRule = LNCNFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_871: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_872: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_873: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_874: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_875: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_876: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_877: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_878: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_879: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_880: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_881: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_882: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_883: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_884: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_885: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_886: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> replace != TOREP
rule_887: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_888: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_889: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_890: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_891: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_892: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_893: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_894: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_895: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_896: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_897: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_898: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_899: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_900: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_901: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_902: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_903: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_904: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_905: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_906: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_907: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_908: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_909: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_910: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_911: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_912: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_913: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_914: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_915: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_916: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_917: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_918: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_919: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_920: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_921: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_922: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_923: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_924: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_925: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_926: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_927: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_928: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_929: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_930: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_931: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_932: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_933: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_934: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_935: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_936: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_937: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_938: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_939: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_940: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_941: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_942: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_943: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_944: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_945: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_946: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_947: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_948: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_949: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_950: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_951: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_952: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_953: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_954: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_955: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_956: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_957: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_958: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_959: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_960: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_961: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_962: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_963: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_964: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_965: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_966: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_967: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_968: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_969: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_970: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_971: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_972: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_973: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_974: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_975: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_976: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_977: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_978: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_979: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_980: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_981: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_982: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_983: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_984: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_985: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_986: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_987: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_988: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_989: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_990: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_991: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_992: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_993: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_994: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_995: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_996: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_997: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_998: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_999: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1000: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1001: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1002: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1003: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1004: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1005: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1006: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1007: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1008: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1009: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1010: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1011: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1012: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1013: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1014: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1015: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1016: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1017: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1018: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1019: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1020: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1021: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1022: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1023: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1024: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1025: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1026: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1027: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1028: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1029: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1030: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1031: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1032: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1033: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1034: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1035: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1036: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1037: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1038: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1039: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1040: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1041: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1042: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1043: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1044: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1045: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1046: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1047: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1048: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1049: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1050: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1051: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1052: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1053: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1054: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1055: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1056: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1057: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_1058: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1059: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_1060: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1061: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_1062: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1063: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1064: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1065: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1066: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1067: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1068: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1069: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1070: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1071: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1072: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1073: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1074: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_1075: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1076: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1077: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1078: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1079: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1080: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1081: repRule = LNCNFR & curLock = TYPE_LOCK_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_1082: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1083: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1084: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1085: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1086: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1087: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1088: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1089: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_1090: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1091: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1092: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1093: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1094: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1095: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1096: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1097: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1098: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1099: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1100: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1101: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1102: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1103: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1104: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1105: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1106: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1107: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1108: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1109: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_1110: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1111: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1112: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1113: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1114: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_1115: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1116: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1117: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1118: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1119: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_1120: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1121: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1122: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1123: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1124: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1125: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_1126: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1127: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1128: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1129: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1130: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1131: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1132: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1133: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1134: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1135: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1136: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1137: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1138: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1139: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1140: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1141: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1142: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1143: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1144: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1145: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1146: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1147: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1148: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1149: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1150: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1151: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1152: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1153: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1154: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1155: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1156: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1157: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1158: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1159: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1160: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1161: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1162: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1163: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1164: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1165: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1166: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1167: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1168: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1169: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1170: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1171: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1172: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1173: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1174: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1175: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1176: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1177: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1178: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1179: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1180: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1181: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1182: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1183: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1184: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1185: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1186: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1187: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1188: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1189: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1190: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1191: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1192: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1193: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1194: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1195: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1196: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1197: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1198: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1199: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1200: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1201: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1202: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1203: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1204: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1205: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1206: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1207: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1208: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1209: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1210: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1211: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1212: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1213: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1214: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1215: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1216: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1217: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1218: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1219: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1220: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1221: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1222: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1223: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1224: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1225: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1226: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1227: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1228: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1229: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1230: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1231: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1232: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1233: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1234: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1235: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1236: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1237: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1238: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1239: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1240: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1241: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1242: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1243: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1244: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1245: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1246: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1247: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1248: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1249: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1250: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1251: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1252: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1253: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1254: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1255: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1256: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1257: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1258: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1259: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1260: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1261: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1262: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1263: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1264: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1265: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1266: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1267: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1268: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1269: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1270: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1271: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1272: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1273: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1274: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1275: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1276: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1277: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1278: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1279: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1280: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1281: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1282: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1283: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1284: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1285: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1286: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1287: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1288: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1289: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1290: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1291: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1292: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> replace != TOREP
rule_1293: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1294: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1295: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1296: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1297: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1298: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1299: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1300: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1301: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1302: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1303: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1304: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1305: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1306: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1307: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1308: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1309: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1310: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1311: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1312: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1313: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1314: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1315: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1316: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1317: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1318: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1319: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1320: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1321: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1322: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1323: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1324: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1325: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1326: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1327: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1328: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1329: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1330: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1331: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1332: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1333: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1334: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1335: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1336: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1337: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1338: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1339: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1340: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1341: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1342: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1343: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1344: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1345: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1346: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1347: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1348: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1349: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1350: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1351: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1352: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1353: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1354: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1355: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1356: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1357: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1358: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1359: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1360: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1361: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1362: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1363: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1364: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1365: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1366: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1367: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1368: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1369: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1370: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1371: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1372: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1373: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1374: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1375: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1376: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1377: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1378: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1379: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1380: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1381: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1382: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1383: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1384: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1385: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1386: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1387: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1388: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1389: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1390: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1391: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1392: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1393: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1394: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1395: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1396: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1397: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1398: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1399: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1400: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1401: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1402: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1403: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1404: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1405: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1406: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1407: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1408: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1409: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1410: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1411: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1412: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1413: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1414: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1415: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1416: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1417: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1418: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1419: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1420: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1421: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1422: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1423: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1424: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1425: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1426: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1427: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1428: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1429: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1430: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1431: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1432: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1433: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1434: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1435: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1436: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1437: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1438: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1439: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1440: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1441: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1442: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1443: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1444: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1445: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1446: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1447: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1448: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1449: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1450: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1451: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1452: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1453: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1454: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1455: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1456: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1457: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1458: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1459: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1460: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1461: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1462: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1463: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1464: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1465: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1466: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1467: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1468: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1469: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1470: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1471: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1472: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1473: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1474: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1475: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1476: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1477: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1478: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1479: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1480: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1481: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1482: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1483: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1484: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1485: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1486: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1487: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1488: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1489: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1490: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1491: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1492: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1493: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1494: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1495: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1496: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1497: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1498: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1499: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1500: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1501: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1502: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1503: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1504: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_1505: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1506: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1507: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1508: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1509: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1510: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1511: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1512: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1513: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1514: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1515: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1516: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1517: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1518: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1519: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1520: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1521: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1522: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1523: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1524: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1525: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1526: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1527: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1528: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1529: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1530: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1531: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1532: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1533: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1534: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1535: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1536: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1537: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1538: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1539: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1540: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1541: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1542: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1543: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1544: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1545: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1546: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1547: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1548: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1549: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1550: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1551: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1552: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1553: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1554: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1555: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1556: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1557: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1558: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1559: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1560: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1561: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1562: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1563: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1564: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1565: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1566: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1567: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1568: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1569: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1570: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1571: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1572: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1573: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1574: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1575: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1576: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1577: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1578: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1579: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_1580: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_1581: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1582: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1583: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1584: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1585: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1586: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1587: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1588: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1589: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1590: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1591: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1592: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1593: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1594: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1595: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1596: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1597: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1598: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1599: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1600: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1601: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1602: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1603: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1604: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1605: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1606: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1607: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1608: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1609: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1610: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1611: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1612: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1613: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1614: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1615: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1616: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1617: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1618: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1619: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1620: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1621: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1622: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1623: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1624: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1625: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1626: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1627: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1628: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1629: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1630: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1631: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1632: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1633: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1634: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1635: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1636: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1637: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1638: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1639: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1640: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1641: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1642: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1643: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1644: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1645: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1646: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1647: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1648: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1649: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1650: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1651: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1652: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1653: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1654: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1655: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1656: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1657: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1658: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1659: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1660: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1661: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1662: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1663: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1664: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1665: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1666: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1667: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1668: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1669: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1670: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1671: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1672: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1673: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1674: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1675: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1676: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1677: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1678: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1679: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1680: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1681: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1682: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1683: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1684: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1685: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1686: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1687: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1688: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1689: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1690: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1691: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1692: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1693: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1694: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1695: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1696: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1697: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1698: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1699: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1700: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1701: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1702: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1703: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1704: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1705: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1706: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1707: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1708: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1709: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1710: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1711: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1712: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1713: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1714: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1715: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1716: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1717: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1718: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1719: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1720: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1721: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1722: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1723: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1724: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1725: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1726: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1727: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1728: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1729: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1730: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1731: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1732: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1733: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1734: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1735: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_1736: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_1737: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
