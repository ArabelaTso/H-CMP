rule_1: replace = NON -> repRule != LCFR
rule_2: repRule = LCFR -> replace != NON
rule_3: repRule = NLNCW -> replace != NON
rule_4: repRule = NLNCR -> replace != NON
rule_5: replace = NON -> repRule != NLNCW
rule_6: replace = NON -> repRule != NLNCR
rule_7: replace = NON -> repRule != LNCFR
rule_8: repRule = LNCFR -> replace != NON
rule_9: replace = TOREP -> repRule != LCFR
rule_10: repRule = LNCNFR -> replace != NON
rule_11: repRule = LCFR -> replace != TOREP
rule_12: replace = NON -> repRule != LNCNFR
rule_13: repRule = LCFR -> replace != RANDOM
rule_14: replace = TOREP -> repRule != LNCFR
rule_15: repRule = LNCFR -> replace != TOREP
rule_16: repRule = LCFR -> replace != REQUIRE
rule_17: replace = TOREP -> repRule != LNCNFR
rule_18: repRule = LNCNFR -> replace != TOREP
rule_19: replace = REQUIRE -> repRule != LCFR
rule_20: replace = RANDINV -> repRule != LCFR
rule_21: repRule = LCFR -> replace != RANDINV
rule_22: repRule = LNCNFR -> replace != RANDINV
rule_23: replace = RANDINV -> repRule != LNCNFR
rule_24: repRule = NLNCW -> replace != REQREPALL
rule_25: replace = REQREPALL -> repRule != NLNCW
rule_26: replace = REQREPALL -> repRule != NLNCR
rule_27: repRule = NLNCR -> replace != REQREPALL
rule_28: replace = REQREPALL -> repRule != LNCNFR
rule_29: repRule = LNCNFR -> replace != REQREPALL
rule_30: repRule = LNCNFR -> curData = TYPE_DATA_2
rule_31: repRule = LNCNFR -> curData = TYPE_DATA_1
rule_32: repRule = LNCNFR -> curNode = TYPE_NODE_2
rule_33: repRule = LNCNFR -> curLock = TYPE_LOCK_2
rule_34: repRule = LNCNFR -> curNode = TYPE_NODE_1
rule_35: repRule = LNCNFR -> curLock = TYPE_LOCK_1
rule_36: repRule = LNCNFR -> curData != TYPE_DATA_1
rule_37: repRule = LNCNFR -> curNode != TYPE_NODE_1
rule_38: repRule = LNCNFR -> curLock != TYPE_LOCK_2
rule_39: repRule = LNCNFR -> curData != TYPE_DATA_2
rule_40: repRule = LNCNFR -> curNode != TYPE_NODE_2
rule_41: repRule = LNCNFR -> curLock != TYPE_LOCK_1
rule_42: repRule = LNCNFR -> curCache = TYPE_CACHE_2
rule_43: repRule = LNCNFR -> curCache = TYPE_CACHE_1
rule_44: repRule = LNCNFR -> curMemory = TYPE_ADDR_2
rule_45: repRule = LNCNFR -> curMemory = TYPE_ADDR_1
rule_46: repRule = LNCNFR -> curMemory != TYPE_ADDR_2
rule_47: repRule = LNCNFR -> curMemory != TYPE_ADDR_1
rule_48: repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = true
rule_49: repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = true
rule_50: repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = true
rule_51: repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = true
rule_52: lock[TYPE_LOCK_1].beUsed = false -> repRule != LNCNFR
rule_53: lock[TYPE_LOCK_2].beUsed = false -> repRule != LNCNFR
rule_54: node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_55: node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_56: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_57: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_58: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_59: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_60: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_61: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_62: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_63: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_64: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_65: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_66: repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_67: repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_68: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_69: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_70: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_71: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_72: replace = NON & lock[TYPE_LOCK_2].beUsed = true -> repRule != LCFR
rule_73: replace = NON & lock[TYPE_LOCK_1].beUsed = true -> repRule != LCFR
rule_74: replace = NON & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCFR
rule_75: replace = NON & lock[TYPE_LOCK_2].beUsed = true -> repRule != NLNCW
rule_76: replace = NON & lock[TYPE_LOCK_2].beUsed = true -> repRule != NLNCR
rule_77: replace = NON & lock[TYPE_LOCK_1].beUsed = true -> repRule != NLNCW
rule_78: replace = NON & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCFR
rule_79: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> repRule != LCFR
rule_80: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> repRule != LCFR
rule_81: replace = NON & node[TYPE_NODE_1].hasLock = true -> repRule != LCFR
rule_82: replace = NON & lock[TYPE_LOCK_1].beUsed = true -> repRule != NLNCR
rule_83: replace = NON & node[TYPE_NODE_2].hasLock = true -> repRule != LCFR
rule_84: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> repRule != NLNCW
rule_85: repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_86: replace = NON & node[TYPE_NODE_1].hasLock = true -> repRule != LNCFR
rule_87: replace = NON & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_88: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_89: repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_90: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> repRule != LNCFR
rule_91: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> repRule != LNCFR
rule_92: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_93: replace = NON & node[TYPE_NODE_2].hasLock = true -> repRule != NLNCR
rule_94: replace = NON & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_95: replace = NON & node[TYPE_NODE_2].hasLock = true -> repRule != NLNCW
rule_96: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_97: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = true
rule_98: replace = NON & node[TYPE_NODE_1].hasLock = true -> repRule != NLNCW
rule_99: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = true
rule_100: repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_101: replace = NON & node[TYPE_NODE_2].hasLock = false -> repRule != LCFR
rule_102: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> repRule != NLNCR
rule_103: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_104: repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_105: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> repRule != NLNCR
rule_106: replace = NON & node[TYPE_NODE_1].hasLock = true -> repRule != NLNCR
rule_107: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> repRule != NLNCW
rule_108: replace = NON & node[TYPE_NODE_1].hasLock = false -> repRule != LCFR
rule_109: replace = NON & node[TYPE_NODE_2].hasLock = true -> repRule != LNCFR
rule_110: replace = NON & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_111: replace = NON & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_112: replace = NON & node[TYPE_NODE_2].hasLock = false -> repRule != LNCFR
rule_113: replace = NON & node[TYPE_NODE_1].hasLock = false -> repRule != NLNCW
rule_114: replace = NON & node[TYPE_NODE_1].hasLock = false -> repRule != LNCFR
rule_115: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> repRule != LNCNFR
rule_116: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = true
rule_117: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = true
rule_118: replace = NON & node[TYPE_NODE_1].hasLock = false -> repRule != NLNCR
rule_119: replace = NON & node[TYPE_NODE_2].hasLock = false -> repRule != NLNCW
rule_120: replace = NON & node[TYPE_NODE_2].hasLock = false -> repRule != NLNCR
rule_121: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> repRule != LNCNFR
rule_122: repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_123: repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_124: replace = NON & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_125: repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_126: replace = NON & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_127: repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_128: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_129: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_130: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_131: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_132: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_133: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_134: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_135: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LCFR
rule_136: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_137: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_138: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_139: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_140: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_141: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_142: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LCFR
rule_143: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LCFR
rule_144: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_145: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LCFR
rule_146: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_147: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_148: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCFR
rule_149: curLock = TYPE_LOCK_2 & repRule = LCFR -> lock[TYPE_LOCK_2].beUsed = true
rule_150: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != NLNCR
rule_151: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != NLNCR
rule_152: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != NLNCW
rule_153: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != NLNCW
rule_154: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCFR
rule_155: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != NLNCW
rule_156: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != NLNCR
rule_157: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCFR
rule_158: curLock = TYPE_LOCK_1 & repRule = LCFR -> lock[TYPE_LOCK_1].beUsed = true
rule_159: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != NLNCR
rule_160: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != NLNCW
rule_161: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCFR
rule_162: curLock = TYPE_LOCK_2 & repRule = LNCFR -> lock[TYPE_LOCK_2].beUsed = true
rule_163: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_164: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_165: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID
rule_166: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_167: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_168: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_169: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_170: replace = NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_171: replace = NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_172: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_173: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_174: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_175: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_176: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_177: curLock = TYPE_LOCK_1 & repRule = LNCFR -> lock[TYPE_LOCK_1].beUsed = true
rule_178: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_179: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_180: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_2].beUsed = true
rule_181: replace = DONE & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_182: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_183: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_184: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = true
rule_185: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_186: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_187: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_188: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_189: replace = DONE & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_190: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_191: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_192: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = true
rule_193: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_194: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_195: replace != NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_196: replace != NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_197: replace = DONE & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_198: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_199: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_1].beUsed = true
rule_200: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_201: replace = DONE & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_202: replace != NON & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_203: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_204: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_205: replace != NON & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_206: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_207: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_208: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_209: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace = DONE -> repRule != LNCNFR
rule_210: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_211: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace = DONE -> repRule != LNCNFR
rule_212: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_213: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_214: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = true
rule_215: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_216: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_217: replace != NON & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_218: replace = DONE & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_219: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_220: replace = DONE & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_221: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = true
rule_222: replace = DONE & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_223: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != NON -> repRule != LNCNFR
rule_224: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_225: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_226: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = true
rule_227: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != NON -> repRule != LNCNFR
rule_228: replace != NON & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_229: replace != NON & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_230: replace != NON & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_231: replace = DONE & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_232: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = true
rule_233: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_234: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_235: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_236: replace != TOREP & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_237: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != TOREP -> repRule != LNCNFR
rule_238: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_239: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_240: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_1].beUsed = true
rule_241: replace != TOREP & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_242: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_243: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_244: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_245: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_246: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_247: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_248: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != TOREP -> repRule != LNCNFR
rule_249: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].beUsed = true
rule_250: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].beUsed = true
rule_251: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_252: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_253: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_254: replace != TOREP & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_255: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_256: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_257: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_258: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_259: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].beUsed = true
rule_260: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].beUsed = true
rule_261: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].beUsed = true
rule_262: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_263: replace != TOREP & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_264: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_265: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_266: replace != TOREP & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_267: replace != TOREP & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_268: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_269: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_270: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != TOREP -> repRule != LNCNFR
rule_271: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_272: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].hasLock = true
rule_273: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_274: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != TOREP -> repRule != LNCNFR
rule_275: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].hasLock = true
rule_276: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].hasLock = true
rule_277: replace != TOREP & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_278: replace != TOREP & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_279: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_280: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_281: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].hasLock = true
rule_282: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].hasLock = true
rule_283: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != TOREP -> repRule != LNCNFR
rule_284: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_285: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_286: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].hasLock = true
rule_287: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].hasLock = true
rule_288: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].hasLock = true
rule_289: replace != RANDINV & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_290: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_291: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_292: replace != RANDINV & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_293: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_294: replace != RANDINV & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_295: replace != RANDINV & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_296: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_297: replace != RANDINV & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_298: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_299: replace != RANDINV & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_300: replace != RANDINV & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_301: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_302: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != RANDINV -> repRule != LNCNFR
rule_303: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != RANDINV -> repRule != LNCNFR
rule_304: replace != RANDINV & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_305: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_306: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_307: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_308: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_309: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_310: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_311: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_312: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_313: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_314: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_315: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_316: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_317: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_318: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_319: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_320: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_321: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_322: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_323: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_324: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_325: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & replace != REQREPALL -> repRule != LNCNFR
rule_326: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_327: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_328: curNode = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_329: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LCFR
rule_330: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_331: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_332: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LCFR
rule_333: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_334: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_335: curData = TYPE_DATA_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_336: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_337: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_338: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_339: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_340: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_341: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_342: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_343: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_344: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_345: curNode = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_346: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_347: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LCFR
rule_348: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_349: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & replace != REQREPALL -> repRule != LNCNFR
rule_350: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_351: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_352: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_353: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_354: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_355: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_356: curData = TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_357: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LCFR
rule_358: curData = TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_359: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_360: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_361: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LNCFR
rule_362: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LNCFR
rule_363: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != NLNCR
rule_364: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_365: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_366: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_367: curData != TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_368: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_369: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_370: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_371: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != NLNCW
rule_372: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_373: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_374: curData != TYPE_DATA_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_375: curNode != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_376: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LCFR
rule_377: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_378: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_379: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_380: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_381: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_382: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != NLNCW
rule_383: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_384: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_385: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_386: curData = TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_387: curData = TYPE_DATA_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_388: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_389: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_390: curData = TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_391: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_392: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_393: curData != TYPE_DATA_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_394: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_395: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_396: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != NLNCR
rule_397: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_398: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LNCFR
rule_399: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_400: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_401: curLock = TYPE_LOCK_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_402: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_2
rule_403: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_404: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_405: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_406: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LCFR
rule_407: curNode = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_408: curData != TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_409: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_410: curNode != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_411: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_412: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LCFR
rule_413: curData = TYPE_DATA_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_414: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_415: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_416: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_417: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_418: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_419: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_420: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != NLNCR
rule_421: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_422: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_423: curData != TYPE_DATA_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_424: curNode = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_425: curData = TYPE_DATA_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_426: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_427: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != NLNCW
rule_428: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != NLNCW
rule_429: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LNCFR
rule_430: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_431: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_432: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_433: curLock = TYPE_LOCK_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_434: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LCFR
rule_435: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_436: curData != TYPE_DATA_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_437: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_438: curNode = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_439: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_440: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_441: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_2
rule_442: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner = TYPE_NODE_1
rule_443: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_444: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_445: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner = TYPE_NODE_1
rule_446: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != NLNCR
rule_447: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_448: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_449: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_450: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_451: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_452: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCW
rule_453: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_454: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_455: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_456: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_457: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_458: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_459: curData != TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_460: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_461: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_462: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_463: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_464: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != NLNCW
rule_465: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_466: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCFR
rule_467: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCW
rule_468: curData != TYPE_DATA_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_469: curNode != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_470: curData != TYPE_DATA_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_471: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LNCFR
rule_472: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_473: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_474: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCR
rule_475: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_476: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_477: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LNCNFR
rule_478: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_479: curData != TYPE_DATA_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_480: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != NLNCR
rule_481: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_482: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_483: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_484: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_485: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_486: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_487: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_488: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_489: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_490: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_491: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LNCFR
rule_492: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_493: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_494: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_495: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_496: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_497: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_498: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_499: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_500: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_501: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_1
rule_502: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_503: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_504: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != NLNCR
rule_505: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_506: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & replace = NON -> repRule != LNCNFR
rule_507: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_508: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_509: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_510: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_511: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_512: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_513: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_514: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_515: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != NLNCR
rule_516: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LNCNFR
rule_517: curData != TYPE_DATA_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_518: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_519: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_520: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_521: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_522: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_523: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_524: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_2
rule_525: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & replace = NON -> repRule != LNCNFR
rule_526: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCFR
rule_527: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].owner != TYPE_NODE_2
rule_528: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_529: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_530: curData != TYPE_DATA_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_531: curNode != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_532: curNode != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_533: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != NLNCW
rule_534: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].owner != TYPE_NODE_1
rule_535: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_536: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_537: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LNCNFR
rule_538: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_539: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_540: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_541: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_542: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LCFR
rule_543: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_544: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_545: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_546: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_547: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_548: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_549: curCache = TYPE_CACHE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_550: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LCFR
rule_551: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_552: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_553: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & replace = NON -> repRule != LNCNFR
rule_554: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_555: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_556: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCNFR
rule_557: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_558: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_559: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_560: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LCFR
rule_561: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_562: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_563: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_564: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_565: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_566: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_567: curMemory = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_568: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_569: curMemory = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_570: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_571: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_572: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_573: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_574: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_575: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_576: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_577: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_578: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & replace = NON -> repRule != LNCNFR
rule_579: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_580: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_581: curCache = TYPE_CACHE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_582: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_583: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_584: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_585: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_586: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_587: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_588: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LCFR
rule_589: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_590: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCFR
rule_591: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCR
rule_592: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_593: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCFR
rule_594: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_595: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != NLNCW
rule_596: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_597: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_598: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != NLNCW
rule_599: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != NLNCR
rule_600: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCR
rule_601: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LCFR
rule_602: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCW
rule_603: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != NLNCW
rule_604: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_605: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCFR
rule_606: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LCFR
rule_607: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_608: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_609: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LCFR
rule_610: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_611: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCFR
rule_612: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_613: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != NLNCR
rule_614: curMemory != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_615: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_616: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LCFR
rule_617: curMemory != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_618: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_619: repRule = LCFR & replace = DONE -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_620: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_621: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LNCFR
rule_622: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != NLNCR
rule_623: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_624: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCFR
rule_625: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != NLNCW
rule_626: lock[TYPE_LOCK_2].beUsed = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_627: lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_628: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != NLNCW
rule_629: repRule = LCFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_630: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != NLNCW
rule_631: lock[TYPE_LOCK_2].beUsed = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_632: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_633: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != NLNCR
rule_634: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != NLNCR
rule_635: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != NLNCW
rule_636: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_637: lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_638: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_639: replace = DONE & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_640: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_641: repRule = LCFR & replace = DONE -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_642: repRule = LCFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_643: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != NLNCR
rule_644: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCFR
rule_645: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCFR
rule_646: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_647: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_648: repRule = LNCFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_649: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_650: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LCFR
rule_651: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LCFR
rule_652: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_653: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LCFR
rule_654: repRule = LNCFR & replace = DONE -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_655: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_656: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_657: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_658: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_659: repRule = LNCFR & replace = DONE -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_660: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_661: repRule = LNCFR & replace = DONE -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_662: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LCFR
rule_663: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCFR
rule_664: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_665: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LCFR
rule_666: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != NLNCW
rule_667: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LCFR
rule_668: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != NLNCR
rule_669: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_670: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != NLNCW
rule_671: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_672: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != NLNCR
rule_673: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_674: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != NLNCR
rule_675: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCFR
rule_676: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_677: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_678: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_679: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCFR
rule_680: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != NLNCW
rule_681: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_682: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_683: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LCFR
rule_684: lock[TYPE_LOCK_2].beUsed = false & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_685: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_686: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_687: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCFR
rule_688: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LCFR
rule_689: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != NLNCW
rule_690: repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_691: lock[TYPE_LOCK_2].beUsed = false & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_692: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != NLNCR
rule_693: repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_694: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_695: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCFR
rule_696: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCFR
rule_697: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != NLNCR
rule_698: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_699: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_700: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != NLNCR
rule_701: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_702: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != NLNCR
rule_703: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != NLNCR
rule_704: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != NLNCW
rule_705: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != NLNCW
rule_706: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_707: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != NLNCW
rule_708: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCFR
rule_709: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != NLNCW
rule_710: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCFR
rule_711: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_712: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_713: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_714: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_715: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_716: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_717: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_718: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_719: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_720: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_721: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID
rule_722: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_723: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_724: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_725: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_726: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_727: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_728: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_729: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != NLNCR
rule_730: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != NLNCR
rule_731: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != NLNCR
rule_732: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_733: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_734: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_735: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != NLNCW
rule_736: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LCFR
rule_737: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != NLNCW
rule_738: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_739: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != NLNCR
rule_740: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != NLNCW
rule_741: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LCFR
rule_742: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != NLNCW
rule_743: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_744: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & replace = RANDINV -> repRule != LCFR
rule_745: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_746: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_747: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].beUsed = false
rule_748: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_749: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & replace = RANDINV -> repRule != LCFR
rule_750: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_751: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_752: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != NLNCW
rule_753: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_754: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_755: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LCFR
rule_756: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LCFR
rule_757: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_758: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_2].beUsed = false
rule_759: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LCFR
rule_760: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_761: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_762: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != NLNCW
rule_763: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != NLNCR
rule_764: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_765: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = false
rule_766: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_767: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_768: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_769: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LCFR
rule_770: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_771: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LCFR
rule_772: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_773: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_774: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_775: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != NLNCW
rule_776: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LCFR
rule_777: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_778: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_779: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_780: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = false
rule_781: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != NLNCR
rule_782: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = false
rule_783: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_784: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LCFR
rule_785: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != NLNCR
rule_786: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_787: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_788: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].beUsed = false
rule_789: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_790: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LCFR
rule_791: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_792: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_793: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_2].beUsed = false
rule_794: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> node[TYPE_NODE_1].hasLock = false
rule_795: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_796: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].beUsed = false
rule_797: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_798: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != NLNCR
rule_799: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_800: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != NLNCR
rule_801: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != NLNCR
rule_802: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_803: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != NLNCR
rule_804: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_805: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_806: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LCFR
rule_807: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != NLNCR
rule_808: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_809: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_810: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != NLNCW
rule_811: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != NLNCW
rule_812: replace = REQUIRE & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LCFR
rule_813: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_814: replace = REQUIRE & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LCFR
rule_815: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_816: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_817: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_818: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_819: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_820: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> node[TYPE_NODE_2].hasLock = false
rule_821: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_822: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_823: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_824: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_825: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCFR
rule_826: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCFR
rule_827: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_828: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_829: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != NLNCW
rule_830: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != NLNCW
rule_831: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_832: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_833: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != NLNCR
rule_834: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = false
rule_835: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != NLNCR
rule_836: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCFR
rule_837: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_838: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LCFR
rule_839: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != NLNCR
rule_840: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCFR
rule_841: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_842: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> node[TYPE_NODE_2].hasLock = false
rule_843: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCFR
rule_844: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_845: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != NLNCW
rule_846: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_847: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_848: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_849: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCFR
rule_850: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_851: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_852: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_2].beUsed = false
rule_853: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LCFR
rule_854: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_855: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_856: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_857: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_858: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != NLNCW
rule_859: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCFR
rule_860: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_861: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_862: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].beUsed = false
rule_863: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_864: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != NLNCW
rule_865: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_866: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_867: replace = REQUIRE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LCFR
rule_868: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = false
rule_869: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].beUsed = false
rule_870: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != NLNCR
rule_871: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_872: replace = REQUIRE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LCFR
rule_873: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = false
rule_874: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_875: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = false
rule_876: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != NLNCR
rule_877: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_878: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != NLNCW
rule_879: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_880: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_881: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_882: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LCFR
rule_883: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].beUsed = false
rule_884: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_885: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = false
rule_886: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_887: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != NLNCW
rule_888: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != NLNCW
rule_889: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LCFR
rule_890: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> node[TYPE_NODE_1].hasLock = false
rule_891: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_892: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_893: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != NLNCR
rule_894: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != NLNCW
rule_895: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_896: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_897: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = false
rule_898: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_899: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_900: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_901: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_902: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCFR
rule_903: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_904: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_905: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_906: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_907: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_908: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_909: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_910: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LNCNFR
rule_911: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = false
rule_912: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_913: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_914: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_915: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_916: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_917: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_918: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_919: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_920: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_921: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_922: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_923: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_924: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> node[TYPE_NODE_1].hasLock = false
rule_925: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_926: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> node[TYPE_NODE_2].hasLock = false
rule_927: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & repRule = LNCNFR -> node[TYPE_NODE_1].hasLock = false
rule_928: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_929: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_930: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_931: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_932: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_933: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_934: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_935: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_936: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_937: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_938: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_939: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_940: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_941: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_942: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_943: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_944: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false
rule_945: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_946: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_947: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false
rule_948: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_949: replace = REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_950: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_951: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_952: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_953: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & replace = RANDINV -> repRule != LNCNFR
rule_954: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_955: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_956: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_957: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_958: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_959: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_960: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_961: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_962: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_963: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_964: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_965: node[TYPE_NODE_2].hasLock = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_966: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_967: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCFR
rule_968: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_969: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_970: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_971: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_972: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_973: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & replace = RANDINV -> repRule != LNCNFR
rule_974: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_975: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> node[TYPE_NODE_2].hasLock = false
rule_976: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> node[TYPE_NODE_2].hasLock = false
rule_977: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_978: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_979: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_980: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_981: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false
rule_982: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_983: replace = NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_984: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_985: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCFR
rule_986: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false
rule_987: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_988: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_989: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_990: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_991: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_992: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCFR
rule_993: replace = REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_994: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_995: repRule = LNCNFR & curNode = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_996: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_997: replace = NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_998: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_999: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1000: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & replace = RANDINV -> repRule != LNCNFR
rule_1001: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> node[TYPE_NODE_1].hasLock = false
rule_1002: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_1003: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1004: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1005: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCFR
rule_1006: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1007: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCFR
rule_1008: repRule = LNCNFR & curNode = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_1009: node[TYPE_NODE_1].hasLock = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1010: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_1011: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1012: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_1013: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1014: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_1015: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1016: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_1017: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_1018: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1019: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_1020: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_1021: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1022: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1023: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1024: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_1025: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1026: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1027: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_1028: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1029: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1030: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1031: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_1032: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1033: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != NON -> repRule != LNCNFR
rule_1034: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1035: replace = DONE & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1036: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_1037: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1038: replace != NON & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1039: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_1040: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1041: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1042: replace = DONE & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1043: replace = DESIGNATED & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_1044: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_1045: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1046: replace = TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1047: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_1048: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_1049: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1050: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != NON -> repRule != LNCNFR
rule_1051: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1052: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace = DONE -> repRule != LNCNFR
rule_1053: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1054: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_1055: replace != NON & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1056: replace = DESIGNATED & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_1057: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace = DONE -> repRule != LNCNFR
rule_1058: replace = TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1059: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1060: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1061: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1062: repRule = NLNCW & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1063: repRule = LNCNFR & curNode = TYPE_NODE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1064: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1065: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1066: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_1067: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_1068: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_1069: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_1070: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1071: repRule = NLNCW & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1072: repRule = NLNCW & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1073: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_1074: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_1075: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1076: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1077: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_1078: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_1079: repRule = LNCNFR & curNode = TYPE_NODE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_1080: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1081: repRule = LNCNFR & curNode = TYPE_NODE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_1082: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_1083: repRule = LNCNFR & curNode = TYPE_NODE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1084: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_1085: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1086: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_1087: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_1088: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_1089: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_1090: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1091: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1092: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1093: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1094: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_1095: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_1096: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1097: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true
rule_1098: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true
rule_1099: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1100: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1101: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true
rule_1102: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1103: repRule = NLNCW & curMemory = TYPE_ADDR_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1104: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1105: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true
rule_1106: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_1107: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_1108: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1109: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_1110: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1111: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_1112: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_1113: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_1114: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1115: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_1116: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_1117: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1118: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1119: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1120: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1121: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1122: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_1123: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> replace != TOREP
rule_1124: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1125: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1126: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != TOREP -> repRule != LNCNFR
rule_1127: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1128: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1129: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != TOREP -> repRule != LNCNFR
rule_1130: replace != TOREP & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1131: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_1132: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_1133: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> replace != TOREP
rule_1134: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID
rule_1135: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID
rule_1136: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID
rule_1137: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID
rule_1138: replace != TOREP & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1139: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCR
rule_1140: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCW
rule_1141: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1142: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1143: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_1144: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1145: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCR
rule_1146: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1147: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_1148: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> replace != RANDOM
rule_1149: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1150: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1151: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1152: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> replace != RANDOM
rule_1153: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCW
rule_1154: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCW
rule_1155: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1156: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1157: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> replace != RANDOM
rule_1158: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_1159: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCR
rule_1160: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1161: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_1162: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1163: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1164: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1165: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> replace != RANDOM
rule_1166: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1167: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1168: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_1169: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1170: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1171: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1172: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCR
rule_1173: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY
rule_1174: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_1175: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1176: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCW
rule_1177: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1178: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1179: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1180: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID
rule_1181: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1182: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1183: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1184: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_1185: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1186: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1187: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1188: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1189: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_1190: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY
rule_1191: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1192: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1193: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_1194: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCW
rule_1195: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1196: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1197: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCW
rule_1198: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCR
rule_1199: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY
rule_1200: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1201: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCW
rule_1202: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY
rule_1203: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != NLNCR
rule_1204: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != NLNCR
rule_1205: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1206: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1207: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != LNCNFR
rule_1208: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1209: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1210: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1211: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1212: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1213: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1214: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != LNCNFR
rule_1215: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1216: replace != RANDINV & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1217: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != LNCNFR
rule_1218: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != LNCNFR
rule_1219: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1220: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1221: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != LNCNFR
rule_1222: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace = REQREPALL -> repRule != LNCNFR
rule_1223: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1224: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1225: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1226: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace = REQREPALL -> repRule != LNCNFR
rule_1227: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1228: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1229: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1230: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1231: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1232: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1233: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1234: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1235: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1236: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1237: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1238: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1239: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1240: replace != RANDINV & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1241: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1242: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1243: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1244: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1245: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1246: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != RANDINV -> repRule != LNCNFR
rule_1247: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1248: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1249: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != RANDINV -> repRule != LNCNFR
rule_1250: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1251: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1252: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1253: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_1254: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1255: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID
rule_1256: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1257: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1258: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_1259: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_1260: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1261: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1262: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_1263: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1264: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1265: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1266: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_1267: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1268: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1269: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1270: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1271: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_1272: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1273: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1274: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1275: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1276: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID
rule_1277: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1278: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1279: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1280: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1281: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1282: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1283: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1284: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1285: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1286: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1287: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1288: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1289: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1290: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID
rule_1291: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID
rule_1292: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID
rule_1293: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1294: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1295: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1296: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1297: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1298: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1299: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1300: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1301: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1302: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1303: replace != REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1304: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1305: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1306: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1307: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1308: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1309: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1310: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1311: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1312: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1313: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1314: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1315: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1316: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1317: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1318: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1319: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1320: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1321: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1322: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1323: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1324: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1325: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1326: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1327: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1328: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1329: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1330: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1331: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1332: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1333: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1334: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1335: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1336: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1337: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1338: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1339: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1340: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1341: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1342: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_1343: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1344: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1345: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1346: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1347: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1348: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1349: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1350: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1351: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1352: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1353: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1354: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1355: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1356: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1357: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1358: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1359: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1360: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1361: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1362: replace = NON & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_1363: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1364: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1365: replace != REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1366: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1367: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_1368: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1369: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1370: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1371: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1372: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1373: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1374: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1375: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1376: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1377: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1378: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & replace != REQREPALL -> repRule != LNCNFR
rule_1379: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1380: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1381: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & replace != REQREPALL -> repRule != LNCNFR
rule_1382: replace = NON & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_1383: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1384: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1385: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1386: replace != REQREPALL & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1387: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1388: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1389: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1390: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1391: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1392: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1393: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1394: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1395: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1396: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1397: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1398: replace != REQREPALL & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1399: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1400: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1401: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1402: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1403: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1404: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1405: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1406: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1407: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1408: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1409: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1410: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1411: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1412: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1413: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1414: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1415: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1416: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1417: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1418: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1419: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1420: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1421: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1422: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1423: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1424: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1425: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1426: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1427: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1428: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1429: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1430: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1431: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1432: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1433: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1434: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1435: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1436: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1437: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1438: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1439: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1440: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1441: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1442: curNode = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1443: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1444: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1445: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1446: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1447: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1448: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1449: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1450: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1451: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1452: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1453: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1454: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1455: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1456: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1457: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1458: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1459: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1460: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1461: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1462: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1463: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1464: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1465: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1466: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1467: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1468: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1469: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1470: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1471: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1472: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1473: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1474: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1475: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1476: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1477: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1478: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1479: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1480: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1481: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1482: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1483: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1484: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1485: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1486: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1487: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1488: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1489: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1
rule_1490: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1491: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1492: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1493: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1494: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1495: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1496: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1497: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1498: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1499: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1500: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1501: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1502: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1503: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1504: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1505: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1506: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1507: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1508: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1509: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1510: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_2 -> repRule != LNCNFR
rule_1511: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1512: curLock = TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1513: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1514: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1515: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1516: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1517: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1518: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1519: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1520: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1521: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1522: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1523: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1524: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1525: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1526: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1527: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1528: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1529: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1530: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1531: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1532: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1533: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1534: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1535: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1536: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1
rule_1537: curData = TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1538: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1539: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1540: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1541: curLock = TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1542: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2
rule_1543: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData = TYPE_DATA_2 -> repRule != LNCNFR
rule_1544: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1545: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock = TYPE_LOCK_1 -> repRule != LNCNFR
rule_1546: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode = TYPE_NODE_1 -> repRule != LNCNFR
rule_1547: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1548: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData = TYPE_DATA_1 -> repRule != LNCNFR
rule_1549: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1550: curData = TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1551: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1552: curData = TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1553: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1554: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1555: curData = TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1556: curLock = TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1557: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1558: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1559: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1560: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1561: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1562: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1563: curLock = TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1564: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1565: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock = TYPE_LOCK_2 -> repRule != LNCNFR
rule_1566: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1567: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1568: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2
rule_1569: curNode = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1570: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1571: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1572: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1573: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1574: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1575: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1576: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1577: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1578: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1579: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1580: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1581: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1582: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1583: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1584: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1585: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1586: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1587: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1588: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1589: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1590: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1591: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1592: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1593: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1594: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1595: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1596: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1597: curLock != TYPE_LOCK_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1598: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1599: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1600: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1601: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1602: replace = NON & lock[TYPE_LOCK_1].beUsed = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1603: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1604: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1605: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1606: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1607: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1608: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1609: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1610: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1611: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1612: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1613: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1614: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1615: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1616: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1617: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1618: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1619: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1620: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1621: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1622: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1623: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1624: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1625: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1626: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1627: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1628: curLock != TYPE_LOCK_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1629: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1630: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1631: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1632: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1633: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1634: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1635: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1636: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1637: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1638: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1639: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_2 -> repRule != LNCNFR
rule_1640: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1641: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1642: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1643: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1644: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1645: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1646: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1647: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1648: curData != TYPE_DATA_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1649: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1650: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1651: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1652: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1653: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1654: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1655: replace = NON & lock[TYPE_LOCK_2].beUsed = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1656: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1657: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_1658: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1
rule_1659: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1660: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1661: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1662: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1663: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1664: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1665: curNode != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1666: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1667: curLock != TYPE_LOCK_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1668: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1669: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1670: curData != TYPE_DATA_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1671: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2
rule_1672: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curNode != TYPE_NODE_1 -> repRule != LNCNFR
rule_1673: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1674: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1675: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_2 -> repRule != LNCNFR
rule_1676: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curLock != TYPE_LOCK_1 -> repRule != LNCNFR
rule_1677: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1678: curLock != TYPE_LOCK_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1679: curData != TYPE_DATA_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1680: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1681: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1
rule_1682: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1683: curData != TYPE_DATA_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1684: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curData != TYPE_DATA_1 -> repRule != LNCNFR
rule_1685: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1686: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1687: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1688: curNode != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1689: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curNode != TYPE_NODE_2 -> repRule != LNCNFR
rule_1690: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2
rule_1691: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1692: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1693: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1694: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1695: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1696: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1697: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1698: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1699: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1700: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1701: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1702: curCache = TYPE_CACHE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1703: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1704: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1705: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1706: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1707: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1708: curCache = TYPE_CACHE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1709: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1710: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1711: curCache = TYPE_CACHE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1712: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1713: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curCache = TYPE_CACHE_1 -> repRule != LNCNFR
rule_1714: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1715: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1716: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curMemory = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1717: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1718: curCache = TYPE_CACHE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1719: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1720: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curCache = TYPE_CACHE_2 -> repRule != LNCNFR
rule_1721: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1722: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1723: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1724: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1725: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1726: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1727: curMemory = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1728: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1729: curCache = TYPE_CACHE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1730: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1731: curMemory = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1732: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1733: curCache = TYPE_CACHE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1734: curCache = TYPE_CACHE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1735: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1736: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1737: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1738: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1739: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1740: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1741: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1742: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1743: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1744: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & curMemory != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1745: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1746: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1747: curMemory != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1748: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1749: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1750: curMemory != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1751: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & curMemory != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1752: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_1753: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_1754: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_1755: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_1756: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_1757: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_1758: replace = DONE & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_1759: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1760: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1761: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1762: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1763: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1764: node[TYPE_NODE_1].hasLock = false & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1765: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1766: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1767: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1768: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1769: node[TYPE_NODE_1].hasLock = false & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1770: node[TYPE_NODE_1].hasLock = false & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1771: node[TYPE_NODE_2].hasLock = false & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1772: node[TYPE_NODE_2].hasLock = false & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1773: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1774: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1775: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1776: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1777: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1778: node[TYPE_NODE_1].hasLock = false & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1779: node[TYPE_NODE_2].hasLock = false & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1780: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1781: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1782: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1783: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1784: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1785: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1786: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1787: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1788: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1789: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1790: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1791: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1792: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1793: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1794: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1795: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1796: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1797: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1798: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1799: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1800: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1801: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1802: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1803: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1804: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1805: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1806: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1807: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1808: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1809: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1810: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1811: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1812: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1813: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1814: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1815: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1816: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1817: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1818: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1819: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1820: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1821: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1822: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1823: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1824: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1825: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1826: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1827: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1828: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1829: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1830: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1831: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1832: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1833: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1834: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1835: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1836: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1837: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_1838: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_1839: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1840: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1841: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1842: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1843: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1844: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1845: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1846: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1847: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1848: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_1849: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1850: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_1851: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1852: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1853: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1854: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1855: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1856: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1857: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1858: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1859: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1860: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1861: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1862: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1863: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1864: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1865: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1866: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1867: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1868: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1869: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1870: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1871: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1872: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1873: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1874: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1875: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1876: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1877: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1878: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1879: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1880: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1881: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1882: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1883: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1884: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1885: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1886: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1887: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1888: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1889: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1890: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1891: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1892: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1893: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1894: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1895: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1896: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1897: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1898: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_1899: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1900: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1901: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1902: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1903: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1904: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1905: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1906: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1907: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1908: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1909: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1910: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1911: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1912: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1913: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1914: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_1915: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1916: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1917: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1918: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1919: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1920: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1921: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1922: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1923: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1924: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1925: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1926: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1927: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1928: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1929: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1930: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1931: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1932: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1933: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1934: repRule = LNCNFR & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1935: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1936: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1937: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1938: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1939: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> replace != TOREP
rule_1940: repRule = LNCNFR & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1941: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> replace != TOREP
rule_1942: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1943: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1944: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1945: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1946: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1947: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1948: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1949: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1950: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1951: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1952: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1953: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1954: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1955: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1956: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1957: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1958: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1959: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1960: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1961: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_1962: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1963: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1964: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1965: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_1966: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1967: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1968: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1969: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1970: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1971: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1972: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_1973: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1974: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_1975: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1976: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1977: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1978: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1979: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_1980: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_1981: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1982: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_1983: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_1984: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_1985: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_1986: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_1987: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1988: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_1989: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1990: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_1991: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_1992: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_1993: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_1994: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1995: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_1996: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_1997: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_1998: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_1999: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2000: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2001: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2002: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2003: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2004: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_2005: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2006: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2007: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2008: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2009: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2010: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2011: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2012: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2013: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_2014: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2015: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2016: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2017: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_2018: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2019: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2020: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2021: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_2022: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_2023: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_2024: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2025: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2026: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2027: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2028: repRule = LNCNFR & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_2029: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2030: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2031: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2032: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2033: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2034: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2035: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2036: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2037: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2038: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2039: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_2040: repRule = LNCNFR & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_2041: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2042: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_2043: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2044: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2045: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2046: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2047: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2048: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2049: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_2050: lock[TYPE_LOCK_1].beUsed = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2051: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2052: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2053: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].beUsed = true -> repRule != LNCNFR
rule_2054: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2055: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & repRule = LNCNFR -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_2056: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2057: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_2058: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2059: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2060: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2061: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2062: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2063: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & repRule = LNCNFR -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_2064: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2065: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2066: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].beUsed = true -> repRule != LNCNFR
rule_2067: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2068: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2069: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2070: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2071: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2072: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2073: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2074: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2075: lock[TYPE_LOCK_2].beUsed = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2076: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2077: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2078: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2079: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2080: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_2081: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2082: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2083: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2084: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2085: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2086: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2087: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2088: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2089: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2090: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_2091: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2092: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2093: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2094: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2095: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2096: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2097: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2098: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2099: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2100: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2101: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2102: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2103: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2104: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2105: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2106: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2107: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2108: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2109: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2110: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2111: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2112: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2113: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2114: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2115: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2116: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2117: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2118: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2119: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2120: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2121: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2122: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2123: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2124: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2125: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2126: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2127: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2128: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2129: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2130: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2131: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2132: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2133: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2134: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2135: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2136: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_2137: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2138: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2139: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2140: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2141: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2142: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_2143: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2144: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2145: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2146: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2147: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_2148: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2149: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2150: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2151: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2152: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2153: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2154: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2155: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2156: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_2157: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2158: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2159: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2160: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2161: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2162: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2163: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2164: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2165: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2166: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2167: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2168: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2169: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].hasLock = false -> repRule != LNCNFR
rule_2170: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2171: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2172: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = true -> repRule != LNCNFR
rule_2173: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2174: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2175: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2176: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].hasLock = true -> repRule != LNCNFR
rule_2177: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2178: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2179: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2180: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2181: curLock = TYPE_LOCK_2 & repRule = LNCNFR -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2182: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2183: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2184: curLock = TYPE_LOCK_1 & repRule = LNCNFR -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2185: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].hasLock = false -> repRule != LNCNFR
rule_2186: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2187: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2188: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2189: node[TYPE_NODE_1].hasLock = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2190: node[TYPE_NODE_2].hasLock = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2191: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2192: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2193: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2194: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2195: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2196: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2197: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2198: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2199: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2200: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2201: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2202: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2203: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2204: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2205: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2206: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2207: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2208: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2209: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2210: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2211: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2212: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2213: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2214: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2215: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2216: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2217: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2218: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2219: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2220: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2221: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2222: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2223: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2224: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2225: node[TYPE_NODE_2].hasLock = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2226: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2227: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2228: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2229: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2230: node[TYPE_NODE_1].hasLock = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2231: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_2232: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2233: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_2234: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2235: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2236: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2237: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2238: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2239: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2240: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2241: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2242: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2243: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2244: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2245: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2246: repRule = LNCNFR & curCache = TYPE_CACHE_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2247: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2248: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2249: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_2250: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2251: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2252: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2253: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_2254: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2255: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2256: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data
rule_2257: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2258: repRule = LNCNFR & curMemory = TYPE_ADDR_2 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2259: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2260: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_2261: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data
rule_2262: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2263: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2264: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2265: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2266: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2267: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2268: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2269: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2270: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2271: repRule = LNCNFR & curCache = TYPE_CACHE_1 -> node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data
rule_2272: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2273: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2274: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2275: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2276: repRule = LNCNFR & curMemory = TYPE_ADDR_1 -> node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data
rule_2277: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2278: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2279: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2280: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2281: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2282: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2283: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2284: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2285: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2286: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2287: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2288: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2289: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2290: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2291: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2292: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2293: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2294: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2295: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2296: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2297: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2298: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2299: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2300: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2301: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2302: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2303: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2304: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2305: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2306: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2307: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2308: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2309: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2310: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2311: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2312: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2313: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2314: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2315: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2316: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2317: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2318: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2319: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2320: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2321: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2322: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2323: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2324: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2325: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2326: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2327: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2328: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2329: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2330: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2331: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2332: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2333: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2334: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2335: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2336: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2337: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2338: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2339: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2340: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2341: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2342: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2343: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2344: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2345: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2346: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2347: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2348: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2349: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2350: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2351: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2352: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2353: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2354: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2355: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2356: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2357: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2358: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2359: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2360: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2361: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2362: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2363: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2364: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2365: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2366: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2367: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2368: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2369: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2370: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2371: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2372: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2373: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2374: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2375: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2376: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2377: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2378: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2379: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2380: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2381: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2382: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2383: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2384: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2385: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2386: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2387: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2388: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2389: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2390: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2391: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2392: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2393: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2394: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2395: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2396: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2397: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2398: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2399: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2400: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2401: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2402: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2403: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2404: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2405: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2406: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2407: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2408: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2409: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2410: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2411: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2412: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2413: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2414: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2415: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2416: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2417: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2418: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2419: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2420: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2421: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2422: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2423: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2424: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2425: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2426: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2427: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2428: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2429: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2430: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2431: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2432: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2433: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2434: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2435: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2436: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2437: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2438: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2439: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2440: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2441: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2442: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2443: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2444: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2445: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2446: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2447: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2448: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2449: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2450: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2451: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2452: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2453: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2454: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2455: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2456: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2457: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2458: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2459: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2460: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2461: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2462: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2463: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2464: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2465: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2466: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2467: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2468: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2469: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2470: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2471: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2472: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2473: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2474: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2475: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2476: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2477: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2478: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2479: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2480: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2481: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2482: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2483: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2484: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2485: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2486: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2487: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2488: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2489: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2490: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2491: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2492: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2493: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2494: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2495: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2496: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2497: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2498: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2499: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2500: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2501: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2502: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2503: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2504: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2505: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2506: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2507: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2508: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2509: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2510: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2511: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2512: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2513: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2514: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2515: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2516: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2517: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2518: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2519: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2520: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2521: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2522: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2523: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2524: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2525: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2526: lock[TYPE_LOCK_1].beUsed = true & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2527: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2528: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2529: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2530: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2531: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2532: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2533: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2534: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2535: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2536: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2537: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2538: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2539: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2540: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2541: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2542: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2543: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2544: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2545: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2546: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2547: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2548: lock[TYPE_LOCK_2].beUsed = true & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2549: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2550: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2551: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2552: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2553: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2554: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2555: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2556: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2557: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2558: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2559: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2560: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].hasLock = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2561: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].hasLock = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2562: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].hasLock = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2563: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].hasLock = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2564: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].hasLock = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2565: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].hasLock = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2566: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].hasLock = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2567: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_2].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_2568: lock[TYPE_LOCK_2].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_2569: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_2].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_2570: lock[TYPE_LOCK_2].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false
rule_2571: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false
rule_2572: lock[TYPE_LOCK_1].beUsed = false & node[TYPE_NODE_1].hasLock = false -> lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false
rule_2573: lock[TYPE_LOCK_2].beUsed = false & node[TYPE_NODE_2].hasLock = false -> lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false
rule_2574: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> replace != TOREP
rule_2575: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_2576: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> replace != TOREP
rule_2577: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_2578: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> replace != TOREP
rule_2579: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_2580: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> replace != TOREP
rule_2581: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2582: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2583: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2584: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2585: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2586: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2587: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2588: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2589: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2590: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2591: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2592: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2593: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2594: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2595: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2596: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2597: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2598: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2599: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_2600: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2601: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_2602: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2603: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2604: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2605: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2606: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2607: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2608: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2609: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2610: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2611: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2612: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2613: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2614: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2615: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2616: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2617: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2618: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2619: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2620: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2621: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2622: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2623: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2624: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2625: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2626: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2627: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2628: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2629: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2630: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2631: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2632: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2633: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2634: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2635: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2636: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2637: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2638: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2639: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2640: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2641: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2642: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2643: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2644: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2645: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2646: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2647: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2648: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2649: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2650: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2651: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2652: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2653: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2654: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2655: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2656: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2657: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2658: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2659: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2660: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2661: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2662: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2663: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2664: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2665: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2666: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2667: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2668: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2669: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2670: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2671: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2672: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2673: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2674: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2675: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2676: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2677: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2678: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2679: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2680: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2681: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2682: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2683: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID -> repRule != LNCNFR
rule_2684: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2685: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2686: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2687: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2688: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2689: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2690: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2691: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2692: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID -> repRule != LNCNFR
rule_2693: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2694: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2695: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2696: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2697: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2698: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2699: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2700: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2701: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2702: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2703: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2704: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2705: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2706: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2707: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2708: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2709: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2710: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2711: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2712: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2713: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2714: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2715: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2716: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2717: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2718: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2719: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2720: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2721: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2722: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2723: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2724: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2725: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2726: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2727: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2728: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2729: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2730: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2731: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2732: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2733: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2734: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2735: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2736: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2737: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2738: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2739: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2740: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_2741: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2742: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2743: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2744: node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2745: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2746: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2747: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2748: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2749: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2750: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2751: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2752: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2753: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2754: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2755: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2756: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2757: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2758: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2759: node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2760: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2761: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2762: node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2763: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2764: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2765: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2766: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2767: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_2768: node[TYPE_NODE_2].firstRead[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2769: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].firstRead[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2770: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2771: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2772: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2773: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2774: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2775: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2776: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2777: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2778: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2779: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2780: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2781: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2782: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2783: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2784: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2785: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2786: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2787: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2788: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2789: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2790: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2791: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2792: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2793: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2794: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2795: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2796: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2797: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2798: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2799: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2800: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2801: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2802: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2803: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2804: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2805: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2806: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2807: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2808: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2809: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2810: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2811: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2812: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2813: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2814: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2815: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2816: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2817: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2818: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2819: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2820: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2821: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2822: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2823: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2824: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2825: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2826: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2827: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2828: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2829: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2830: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2831: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2832: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2833: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2834: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2835: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2836: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2837: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2838: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2839: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2840: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2841: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2842: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2843: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2844: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2845: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2846: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2847: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2848: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2849: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2850: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2851: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2852: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2853: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2854: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2855: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2856: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2857: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2858: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2859: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2860: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2861: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2862: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2863: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2864: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2865: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2866: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2867: lock[TYPE_LOCK_2].owner = TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2868: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2869: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2870: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2871: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2872: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2873: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2874: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2875: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2876: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_2 -> repRule != LNCNFR
rule_2877: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2878: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2879: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2880: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2881: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2882: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2883: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2884: lock[TYPE_LOCK_1].owner = TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2885: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner = TYPE_NODE_1 -> repRule != LNCNFR
rule_2886: lock[TYPE_LOCK_2].owner = TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2887: lock[TYPE_LOCK_1].owner = TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2888: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2889: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2890: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2891: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2892: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2893: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2894: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2895: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2896: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2897: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2898: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2899: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2900: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2901: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2902: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2903: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2904: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2905: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2906: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2907: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2908: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2909: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2910: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2911: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2912: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2913: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2914: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2915: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2916: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2917: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2918: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2919: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2920: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2921: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2922: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2923: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2924: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2925: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2926: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2927: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2928: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2929: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2930: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2931: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_2932: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2933: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2934: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2935: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2936: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_2937: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2938: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2939: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2940: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_2941: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2942: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2943: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2944: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2945: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2946: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2947: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2948: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2949: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2950: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2951: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2952: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2953: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_2954: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2955: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2956: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2957: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2958: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2959: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2960: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2961: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2962: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2963: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2964: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2965: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2966: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2967: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2968: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_2969: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2970: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2971: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_2972: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2973: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2974: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2975: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2976: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2977: lock[TYPE_LOCK_1].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2978: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_2979: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2980: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2981: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_2982: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2983: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2984: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_2985: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2986: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_2987: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_2988: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_2989: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2990: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_2991: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_2992: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_2993: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_2994: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2995: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2996: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_2997: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2998: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_2999: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3000: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3001: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3002: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3003: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3004: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3005: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3006: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = DIRTY -> repRule != LNCNFR
rule_3007: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_3008: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3009: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3010: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3011: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3012: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3013: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3014: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3015: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_3016: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3017: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3018: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3019: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3020: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3021: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3022: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3023: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3024: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3025: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3026: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3027: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3028: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3029: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3030: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3031: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3032: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3033: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_3034: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3035: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3036: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3037: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = DIRTY -> repRule != LNCNFR
rule_3038: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3039: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3040: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> repRule != LNCNFR
rule_3041: lock[TYPE_LOCK_1].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3042: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_1].owner != TYPE_NODE_2 -> repRule != LNCNFR
rule_3043: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3044: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false -> repRule != LNCNFR
rule_3045: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & lock[TYPE_LOCK_2].owner != TYPE_NODE_1 -> repRule != LNCNFR
rule_3046: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3047: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3048: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3049: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false -> repRule != LNCNFR
rule_3050: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3051: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> repRule != LNCNFR
rule_3052: lock[TYPE_LOCK_2].owner != TYPE_NODE_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3053: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3054: lock[TYPE_LOCK_2].owner != TYPE_NODE_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3055: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3056: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3057: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3058: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3059: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3060: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3061: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3062: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3063: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3064: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3065: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3066: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3067: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3068: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3069: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3070: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3071: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3072: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3073: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3074: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3075: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3076: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3077: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3078: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3079: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3080: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3081: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3082: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3083: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3084: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3085: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3086: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3087: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3088: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3089: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3090: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3091: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3092: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3093: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3094: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3095: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3096: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3097: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3098: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3099: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3100: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3101: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3102: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3103: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3104: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3105: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3106: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3107: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3108: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3109: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3110: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3111: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3112: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3113: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID -> repRule != LNCNFR
rule_3114: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3115: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3116: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3117: lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = false & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3118: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3119: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3120: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3121: lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = false & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3122: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = VALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3123: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3124: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3125: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = VALID -> repRule != LNCNFR
rule_3126: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3127: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3128: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3129: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3130: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3131: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3132: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3133: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3134: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3135: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3136: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3137: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3138: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3139: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3140: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3141: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3142: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3143: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3144: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3145: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3146: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3147: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3148: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3149: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3150: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3151: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3152: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3153: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3154: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3155: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != DIRTY -> repRule != LNCNFR
rule_3156: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != DIRTY -> repRule != LNCNFR
rule_3157: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3158: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3159: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3160: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3161: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3162: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3163: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3164: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3165: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3166: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3167: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3168: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3169: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3170: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3171: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3172: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3173: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3174: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3175: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3176: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3177: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3178: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3179: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3180: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3181: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3182: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3183: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3184: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3185: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3186: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3187: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3188: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3189: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3190: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3191: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3192: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3193: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3194: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3195: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3196: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3197: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3198: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3199: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3200: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3201: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3202: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3203: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3204: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3205: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3206: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3207: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3208: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3209: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3210: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3211: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3212: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3213: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3214: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3215: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3216: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3217: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3218: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID -> repRule != LNCNFR
rule_3219: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3220: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3221: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3222: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3223: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID -> repRule != LNCNFR
rule_3224: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3225: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3226: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3227: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3228: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3229: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3230: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3231: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3232: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3233: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3234: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3235: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3236: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3237: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3238: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3239: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3240: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3241: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3242: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3243: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3244: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3245: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3246: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3247: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3248: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3249: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3250: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3251: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3252: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3253: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3254: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3255: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3256: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3257: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3258: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3259: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3260: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3261: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3262: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3263: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3264: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3265: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3266: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3267: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3268: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3269: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3270: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3271: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3272: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3273: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3274: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3275: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3276: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3277: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3278: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3279: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3280: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3281: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3282: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3283: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3284: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3285: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3286: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3287: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3288: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3289: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3290: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3291: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3292: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3293: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3294: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3295: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3296: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3297: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3298: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3299: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3300: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3301: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3302: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3303: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3304: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3305: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3306: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3307: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3308: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3309: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3310: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3311: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3312: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3313: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3314: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3315: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3316: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3317: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3318: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3319: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state = INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3320: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state = INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3321: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3322: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3323: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3324: node[TYPE_NODE_2].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3325: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3326: node[TYPE_NODE_2].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3327: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3328: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3329: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3330: node[TYPE_NODE_1].cache[TYPE_CACHE_2].state != INVALID & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3331: node[TYPE_NODE_1].cache[TYPE_CACHE_1].state != INVALID & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3332: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3333: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3334: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3335: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3336: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3337: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3338: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3339: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3340: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3341: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3342: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3343: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3344: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3345: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3346: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3347: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3348: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3349: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3350: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_1].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_1].beUsed = true
rule_3351: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3352: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_1] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3353: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & lock[TYPE_LOCK_2].inProtection[TYPE_ADDR_2] = true -> lock[TYPE_LOCK_2].beUsed = true
rule_3354: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3355: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3356: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3357: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3358: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3359: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3360: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3361: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3362: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3363: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3364: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3365: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3366: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3367: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3368: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3369: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3370: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3371: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3372: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3373: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3374: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3375: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3376: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3377: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3378: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3379: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3380: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3381: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3382: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3383: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3384: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3385: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3386: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3387: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3388: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3389: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3390: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3391: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3392: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3393: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3394: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3395: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3396: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3397: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3398: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3399: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3400: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3401: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3402: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3403: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3404: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3405: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3406: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3407: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3408: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3409: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3410: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3411: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3412: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr = TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3413: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3414: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr = TYPE_ADDR_2 -> repRule != LNCNFR
rule_3415: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr = TYPE_ADDR_1 -> repRule != LNCNFR
rule_3416: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3417: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3418: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3419: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3420: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3421: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3422: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3423: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3424: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3425: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3426: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3427: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3428: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3429: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3430: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3431: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3432: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3433: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3434: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3435: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3436: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3437: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3438: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3439: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3440: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3441: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3442: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3443: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3444: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3445: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3446: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3447: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3448: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3449: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3450: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3451: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3452: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3453: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3454: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3455: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3456: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3457: node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3458: node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3459: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 -> repRule != LNCNFR
rule_3460: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3461: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3462: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3463: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3464: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3465: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3466: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3467: node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3468: node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data & node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 -> repRule != LNCNFR
rule_3469: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3470: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3471: node[TYPE_NODE_1].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3472: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_2].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3473: node[TYPE_NODE_1].cache[TYPE_CACHE_2].addr != TYPE_ADDR_2 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_1].data -> repRule != LNCNFR
rule_3474: node[TYPE_NODE_2].cache[TYPE_CACHE_2].addr != TYPE_ADDR_1 & node[TYPE_NODE_1].cache[TYPE_CACHE_2].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
rule_3475: node[TYPE_NODE_2].cache[TYPE_CACHE_1].addr != TYPE_ADDR_1 & node[TYPE_NODE_2].cache[TYPE_CACHE_1].data = memory[TYPE_ADDR_2].data -> repRule != LNCNFR
